/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package Views;

 
import clases.PersonalizeTable;
import clases.Validate;
import java.awt.Color;
import java.awt.Dimension;
import java.text.DecimalFormat;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

 
public class Ejercicio_2 extends javax.swing.JDialog {

     private Double Nota1= 0.00,Nota2=0.00,Nota3=0.00,Promedio=0.00;
     
     private String Condicion;
     
     DefaultTableModel modelNotas;
     
     DecimalFormat formatDecimal = new DecimalFormat("#.00");
     
     Validate validate = new Validate();
     
    public Ejercicio_2(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        modelNotas = (DefaultTableModel) TablaNotas.getModel();
        
        
        this.setLocationRelativeTo(null);
        
        this.setTitle("Aplicación promedio de 3 notas");
        
        /// pintamos la ultima columna para las condiciones
        
        TablaNotas.getColumnModel().getColumn(4).setCellRenderer(new PersonalizeTable());
        
        TablaNotas.getTableHeader().setBackground(Color.BLUE);
        TablaNotas.setRowHeight(32);
        
        TablaNotas.getTableHeader().setPreferredSize(new Dimension(120,36));
        
        TablaNotas.getTableHeader().setForeground(Color.white);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtNota1 = new javax.swing.JTextField();
        txtNota2 = new javax.swing.JTextField();
        txtNota3 = new javax.swing.JTextField();
        btnProcesarNotas = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        btnNuevo = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        TablaNotas = new javax.swing.JTable();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("NOTA 1 : ");

        jLabel2.setText("NOATA 3: ");

        jLabel3.setText("NOTA 2  : ");

        txtNota1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNota1KeyPressed(evt);
            }
        });

        txtNota2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNota2KeyPressed(evt);
            }
        });

        txtNota3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNota3KeyPressed(evt);
            }
        });

        btnProcesarNotas.setText("Procesar notas ");
        btnProcesarNotas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcesarNotasActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancelar ");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnNuevo.setText("Nuevo ");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        TablaNotas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NOTA 1", "NOTA 2", "NOTA 3", "PROMEDIO", "CONDICIÓN"
            }
        ));
        jScrollPane2.setViewportView(TablaNotas);
        if (TablaNotas.getColumnModel().getColumnCount() > 0) {
            TablaNotas.getColumnModel().getColumn(4).setMinWidth(120);
            TablaNotas.getColumnModel().getColumn(4).setPreferredWidth(100);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNota1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNota2, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNota3, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 548, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(149, 149, 149)
                .addComponent(btnProcesarNotas, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(btnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNota1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNota2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNota3, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnProcesarNotas)
                    .addComponent(btnCancel)
                    .addComponent(btnNuevo))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnProcesarNotasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcesarNotasActionPerformed
    
    ///primero validamos, antes de calcular el promedio de notas e inngreso
    
    if(txtNota1.getText().length() == 0) /// le preguntamos, si la longitud del txt es 0
    {
        txtNota1.grabFocus(); /// si es 0 el foco permanece en txtNota1
    }else
    {
      if(txtNota2.getText().length() == 0 )
      {
          txtNota2.grabFocus();
      }else
      {
          if(txtNota3.getText().length() == 0)
          {
              txtNota3.grabFocus();
          }else{
              /// ingreso de notas  a la tabla
              
              
              Nota1 = Double.parseDouble(txtNota1.getText());
              
              Nota2 = Double.parseDouble(txtNota2.getText());
              
              Nota3 = Double.parseDouble(txtNota3.getText());
              
              if(Nota1<1 || Nota1>20)
              {
                  JOptionPane.showMessageDialog(null, "Ingrese una nota 1 que estee entre [0-20]","Mensaje del sistema",JOptionPane.ERROR_MESSAGE);
              }else
              {
                 if(Nota2<1 || Nota2>20)
                 {
                     JOptionPane.showMessageDialog(null, "Ingrese una nota 2 que estee entre [0-20]","Mensaje del sistema",JOptionPane.ERROR_MESSAGE);
                 }else
                 {
                     if(Nota3<1 || Nota3>20)
                     {
                         JOptionPane.showMessageDialog(null, "Ingrese una nota 3 que estee entre [0-20]","Mensaje del sistema",JOptionPane.ERROR_MESSAGE);
                     }else
                     {
                         IngresoNotas(Nota1, Nota2, Nota3);
                     }
                 }
              }
              
               
          }
      }
    }
    }//GEN-LAST:event_btnProcesarNotasActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
      reset();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
      reset();
      
      validate.ClearTable(modelNotas);
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void txtNota1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNota1KeyPressed
        if(evt.getKeyChar() == evt.VK_ENTER)
        {
            if(txtNota1.getText().isEmpty()){
                txtNota1.grabFocus();
            }else{
               Nota1 = Double.parseDouble(txtNota1.getText());
               if(Nota1<1 || Nota1>20)
               {
                  JOptionPane.showMessageDialog(null, "Ingrese una nota 1 que estee entre [0-20]","Mensaje del sistema",JOptionPane.ERROR_MESSAGE);
               }else{
                   txtNota2.grabFocus();
               } 
                
            }
        }
    }//GEN-LAST:event_txtNota1KeyPressed

    private void txtNota2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNota2KeyPressed
       if(evt.getKeyChar() == evt.VK_ENTER)
        {
            if(txtNota2.getText().isEmpty()){
                txtNota2.grabFocus();
            }else{
               Nota2 = Double.parseDouble(txtNota2.getText());
               if(Nota2<1 || Nota2>20)
               {
                  JOptionPane.showMessageDialog(null, "Ingrese una nota 2 que estee entre [0-20]","Mensaje del sistema",JOptionPane.ERROR_MESSAGE);
               }else{
                   txtNota3.grabFocus();
                   
               } 
                
            }
        }
    }//GEN-LAST:event_txtNota2KeyPressed

    private void txtNota3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNota3KeyPressed
     if(evt.getKeyChar() == evt.VK_ENTER)
        {
            if(txtNota3.getText().isEmpty()){
                txtNota3.grabFocus();
            }else{
               Nota3 = Double.parseDouble(txtNota3.getText());
               if(Nota3<1 || Nota3>20)
               {
                  JOptionPane.showMessageDialog(null, "Ingrese una nota 3 que estee entre [0-20]","Mensaje del sistema",JOptionPane.ERROR_MESSAGE);
               }else{
                    IngresoNotas(Nota1,Nota2, Nota3);
                    
                    reset();
               } 
                
            }
        }
    }//GEN-LAST:event_txtNota3KeyPressed

    private void IngresoNotas(double nota_1,double nota_2, double nota_3)
    {
        Double Promedio = (nota_1+nota_2+nota_3)/3;
        
        
       
        /// IF TERNARIO
        Condicion = Promedio>=10.5  && Promedio<=18 ?"APROBADO":Promedio>18?"EXCELENTE":"DESAPROBADO";
        
    
          Object NotasData[] = {nota_1,nota_2,nota_3,formatDecimal.format(Promedio),Condicion};
          
          modelNotas.addRow(NotasData);
          
    }
    
    private void reset()
    {
        txtNota1.setText("");
        txtNota2.setText("");
        txtNota3.setText("");
        
        txtNota1.grabFocus();
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ejercicio_2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ejercicio_2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ejercicio_2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ejercicio_2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Ejercicio_2 dialog = new Ejercicio_2(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TablaNotas;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnProcesarNotas;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtNota1;
    private javax.swing.JTextField txtNota2;
    private javax.swing.JTextField txtNota3;
    // End of variables declaration//GEN-END:variables
}
